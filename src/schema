/*
Enumerations follow. These are hardcoded in this file because the tsv table containing them is not parseable by standard means.
*/
CREATE TABLE vessels (
  State text PRIMARY KEY CHECK(State in ('solid', 'liquid', 'gas')),
  Small text NOT NULL,
  Medium text NOT NULL,
  Large text NOT NULL
);
INSERT INTO vessels (State, Small, Medium, Large) VALUES ('solid', 'Bag', 'Sack', 'Barrel');
INSERT INTO vessels (State, Small, Medium, Large) VALUES ('liquid', 'Vial', 'Beaker', 'Drum');
INSERT INTO vessels (State, Small, Medium, Large) VALUES ('gas', 'Flask', 'Cartridge', 'Canister');
/*end enumerations*/

CREATE TABLE minecraft_item (
  ID text PRIMARY KEY,
  Name text NOT NULL,
  BurnIntensity int,
  BurnDuration int,
  CHECK(BurnIntensity IS null = BurnDuration IS null)
);

CREATE TABLE minecraft_block (
  ID text PRIMARY KEY,
  Name text NOT NULL,
  BurnIntensity int,
  BurnDuration int,
  CHECK(BurnIntensity IS null = BurnDuration IS null)
);

CREATE TABLE element (
  Name text PRIMARY KEY,
  Symbol text NOT NULL UNIQUE,
  State text NOT NULL CHECK(State IN ('solid', 'liquid', 'gas'),
  SmallVessel text,
  MediumVessel text,
  LargeVessel text,
  Catalyst text,
  Nugget text,
  MaskDamage int,
  Ingot text,
  MoldDamage int,
  Block text,
  BurnIntensity int,
  BurnDuration int,
  AtomicNumber int NOT NULL UNIQUE,
  Group int NOT NULL,
  Period int NOT NULL,
  Density real,
  MeltingPoint real,
  BoilingPoint real,
  SpecificHeat real,
  ElectroNegativity real,
  Abundance real NOT NULL,
  CHECK(BurnIntensity IS null = BurnDuration IS null)
);

CREATE TABLE compound (
  Name text PRIMARY KEY,
  Formula text,
  State text CHECK(State IN ('solid', 'liquid', 'gas')),
  SmallVessel text,
  MediumVessel text,
  LargeVessel text,
  Catalyst text,
  BurnIntensity int,
  BurnDuration int,
  Nicknames text,
  CHECK(BurnIntensity IS null = BurnDuration IS null)
);

CREATE TABLE polymer (
  Name text PRIMARY KEY,
  ShortName text,
  Thermoplastic number NOT NULL, /* SQLite has no boolean type */
  State text NOT NULL CHECK (State IN ('solid', 'liquid', 'gas')),
  Level int,
  RecyclingNumber int,
  Degradeable number NOT NULL,
  Solvent text,
  Class1 text NOT NULL,
  Class2 text,
  Class3 text,
  Fiber text,
  SmallVessel text,
  MediumVessel text,
  LargeVessel text,
  BlockBounce int,
  Block text,
  Stair text,
  Wall text,
  SlabBounce int,
  Slab text,
  SlabBlock text,
  DoubleSlab text,
  DoubleSlabBlock text,
);

CREATE TABLE alloy (
  Name text PRIMARY KEY,
  Nugget text NOT NULL,
  Ingot text NOT NULL,
  Block text NOT NULL,
  MaskDamage int,
  MoldDamage int,
);

CREATE TABLE native_ore (
  Name text PRIMARY KEY,
  Source text NOT NULL,
  ExpMin int NOT NULL,
  ExpMax int NOT NULL,
  VeinPerChunk int NOT NULL,
  BlockPerVein int NOT NULL,
  DepthMin int NOT NULL,
  DepthMax int NOT NULL
);

CREATE TABLE mineral (
  Name text PRIMARY KEY,
  Hardness int NOT NULL,
  Resistance int NOT NULL,
  ExpMin int NOT NULL,
  ExpMax int NOT NULL,
  VeinPerChunk int NOT NULL,
  BlockPerVein int NOT NULL,
  DepthMin int NOT NULL,
  DepthMax int NOT NULL
);

CREATE TABLE polymer_brick (
  TileEntity text NOT NULL,
  Source text NOT NULL,
  Width int NOT NULL,
  Length int NOT NULL,
  Height int NOT NULL DEFAULT 1,
  SubBlock text NOT NULL,
  Mold text NOT NULL,
  Amount int NOT NULL,
  Duration int NOT NULL,
);

CREATE TABLE molded_item (
  Mold text NOT NULL,
  Variant text NOT NULL,
  Name text NOT NULL,
  Source text NOT NULL,
  SourceAmt int NOT NULL, /* unit is small vessel */
  CrafingTime int NOT NULL,
  MaxStackSize int NOT NULL CHECK(MaxStackSize > 0 && MaxStackSize < 65),
  Level int NOT NULL,
  ParamterNames text,
  ParameterValues text,
  PRIMARY KEY(Mold, Variant)
);

CREATE TABLE tool (
  Shaft text NOT NULL,
  Head text NOT NULL,
  Material text NOT NULL,
  Harvest int NOT NULL,
  Uses int NOT NULL,
  Efficiency int NOT NULL,
  Damage int NOT NULL,
  Enchantability int NOT NULL,
  Pickaxe text,
  Axe text,
  Shovel text,
  Sword text,
  Hoe text,
  PRIMARY KEY(Shaft, Head)
);

CREATE TABLE pogo_stick (
  Name text PRIMARY KEY,
  Material text NOT NULL,
  MaxBounces int NOT NULL,
  BounceHeight int NOT NULL,
  MovementBuff number NOT NULL,
  GroundRestrit number NOT NULL,
  Level int NOT NULL
);

CREATE TABLE custom_object (
  Name text PRIMARY KEY,
  ID text NOT NULL,
  Type text NOT NULL,
  Level int,
  MaxStack int NOT NULL,
  ParameterNames text,
  Parameters text,
  CHECK(ParameterNames IS null = Prameters IS null)
);

CREATE TABLE armor (
  Material text PRIMARY KEY,
  MaterialName text NOT NULL,
  Durability int NOT NULL,
  Enchantability int NOT NULL,
  AquaAfinnity int NOT NULL,
  Helm text,
  HelmName text,
  HelmReduction int,
  Chest text,
  ChestName text,
  ChestReduction int,
  Legging text,
  LeggingName text,
  LeggingReduction text,
  Boot text,
  BootName text,
  BootReduction int
);

CREATE TABLE wafer (
  Name text PRIMARY KEY,
  Layer text NOT NULL,
  LayerNumber int NOT NULL,
  ElectronicDevice text,
  Mask text,
  Resist text,
  CleanRoom int
);

CREATE TABLE mask (
  Name text PRIMARY KEY,
  ID text NOT NULL,
  Device text NOT NULL,
  Layer number NOT NULL
);

CREATE TABLE gripped_tool (
  Name text PRIMARY KEY,
  BaseItem text NOT NULL,
  Grip text NOT NULL,
  DurabilityBuff number NOT NULL,
  SpeedBuff number NOT NULL,
  Level int
);

CREATE TABLE inventory (
  Name text PRIMARY KEY,
  BlockID text NOT NULL,
  TileEntityID text NOT NULL,
  InterfaceID int NOT NULL,
  RenderID int NOT NULL,
  Render3dObject int NOT NULL CHECK(Render3dObject in (0, 1)),
  Depth int NOT NULL,
  Width int NOT NULL,
  Height int NOT NULL,
  FuelPort text, /* really a list of three ints, not sure how to express */
  InputPort text,  /* See above */
  OutputPort text, /* See above */
  Icons text, /* Comma separated mapping of (Inventory, Down, Up, North, South, West, East, Default) to (top, side, front) */
  ParamteterNames text,
  ParameterValues text,
);
